<<echo=FALSE>>=
source("config.R")
@

\section{Results}

<<>>=
library(dplyr)
load(file.path(root, "data", "tidy_betas.rda"))
tidy_betas <- tidy_betas %>%
  mutate(annotation = "",
         annotation = ifelse(beta == max(beta), 
                             paste0("Most dominant team (", name, ")"), 
                             annotation),
         annotation = ifelse(beta == min(beta), 
                             paste0("Least dominant team (", name, ")"), 
                             annotation))
colors <- tidy_betas %>%
  select(name, primary, secondary) %>%
  unique()
primary <- colors$primary
secondary <- colors$secondary
names(primary) <- colors$name
names(secondary) <- colors$name
@


<<spaghetti, fig.height=15, fig.cap="Team strengths over time for all four sports.">>=
library(ggplot2)
ggplot(data = tidy_betas, 
       aes(x = time_val, y = beta, 
           color = name, fill = name)) +
  geom_line(alpha = 0.5) + 
  geom_point(shape = 21, size = 0.5, alpha = 0.8) + 
  facet_wrap(~sport, ncol = 1) + 
  geom_text(aes(label = annotation), color = "black", hjust = "left", nudge_x = 0.25) + 
  scale_color_manual(name = NULL, values = primary) + 
  scale_fill_manual(name = NULL, values = secondary) + 
  scale_x_continuous(name = "Season", breaks = 2005:2015) +
  scale_y_continuous(name = "Value of beta coefficient") + 
  guides(color = FALSE, fill = FALSE)
  #  guides(color = guide_legend(ncol = 2))
@


Figure~\ref{fig:countourSigma} displays the joint distribution of $\sigma_w$ and $\sigma_s$. 

\ben{add table with confidence intervals}

<<>>=
load(file.path(root, "data", "params.rda"))
@


<<contourSigma, fig.cap="Contour plot of the season-to-season and week-to-week variability across all four major sports.">>=
ggplot(params, aes(x = sigma_w, y = sigma_s, color = sport)) + 
  geom_density_2d() + geom_point(alpha = 0.1)
@

Figure~\ref{fig:countourGamma} displays the joint distribution of $\gamma_w$ and $\gamma_s$. 

<<contourGamma, fig.cap="Contour plot of the season-to-season and week-to-week auto-regressive parameter across all four major sports.">>=
ggplot(params, aes(x = gamma_w, y = gamma_s, color = sport)) + 
  geom_density_2d() + geom_point(alpha = 0.1)
@

<<include=FALSE>>=
summary(params$alpha)
ggplot(data = params, aes(x = alpha, color = sport)) +
  geom_density()
@


<<>>=
## Home advantage plots
load("data/bigfour.rda")
sport.est <- alphas %>% group_by(sport) %>% summarise(alpha.sport = mean(alpha))
makeAlphas <- function(sport){
  teamnames <- sort(t(unique(bigfour[bigfour$sport==sport,"home_team"])))
  if (sport == "nba"){teamnames[31] <- "Seattle Supersonics"}
  if (sport == "nhl"){teamnames[31] <- "Atlanta Thrashers"}
  out.med <- apply(alphaInds[[sport]],c(1),median)
  out.lower <- apply(alphaInds[[sport]],c(1), quantile, probs = 0.025)
  out.upper <- apply(alphaInds[[sport]],c(1), quantile, probs = 0.975)
  dat.alphas <- data.frame(alpha.team = out.med, alpha.lower = out.lower, 
                           alpha.upper = out.upper, team = teamnames, sport = sport)
  return(dat.alphas)
}

dat.alphas <- lapply(sports[1:4], makeAlphas) 
alphas.all <- lapply(dat.alphas,function(x){return(x[])}) %>%  
        bind_rows() %>% 
        left_join(sport.est) %>%
        mutate(alpha.team.overall = alpha.team + alpha.sport, 
               alpha.team.lower = alpha.lower + alpha.sport, 
               alpha.team.upper = alpha.upper + alpha.sport, 
               sport = factor(sport, levels = c("nba", "nfl", "nhl", "mlb")))

limits <- aes(ymax = alpha.team.upper, ymin=alpha.team.lower)
positions <- alphas.all[order(alphas.all$alpha.team.overall),]$team
p <- ggplot(alphas.all, aes(y=alpha.team.overall, x=team, colour = sport))
breaks <- c(log(seq(1.2, 1.8, by = 0.2)))
p1 <- p + geom_point() + 
  geom_errorbar(limits, width=0.2) + 
  scale_x_discrete(limits = positions) + theme(text = element_text(size=6)) +
  coord_flip()
@

<<alphaAll, fig.height = 10, fig.width = 6, fig.cap="Median posterior draw (with 2.5th, 97.5th quantiles) of each franchise's home advantage intercept, on log odds scale">>=
p1
@




